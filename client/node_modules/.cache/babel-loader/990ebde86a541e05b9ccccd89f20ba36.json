{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/build-screener/testFetch.component.jsx\";\nimport React from 'react';\nimport { SYMBOLS, SP500, NAS100, DJ30 } from '../../assets/constants'; // function sleep(milliseconds) {\n// \tconst date = Date.now();\n// \tlet currentDate = null;\n// \tdo {\n// \t\tcurrentDate = Date.now();\n// \t} while (currentDate - date < milliseconds);\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass TestFetch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unavailableSymbols: []\n    };\n  }\n\n  async componentDidMount() {\n    const x = await sleep(5000);\n    console.log('waited'); // for (let index = 0; index < SP500.length; index++) {\n\n    for (let index = 0; index < SP500.slice(0, 15).length; index++) {\n      const sleepTime = index % 5 === 0 ? 100000 * index : 0;\n      console.log(sleepTime, index, index % 5, 'sleep set');\n      const u = await sleep(sleepTime);\n      console.log('waited'); // const x = await sleep(sleepTime);\n      // console.log('waited')\n    } // // sleep(sleepTime).then(() => {\n    // // \t// Do something after the sleep!\n    // // \tconsole.log(sleepTime, index, 'sleep');\n    // SP500.slice(0, 15).forEach((symbol, index) => {\n    // \t// SP500.forEach((symbol, index) => {\n    // \t// console.log('symbol', symbol);\n    // \tthis.props.fetchRealTimeData([symbol], ['closePrice']).then(obj => {\n    // \t\tif (!obj) {\n    // \t\t\tthis.setState(prevState => ({\n    // \t\t\t\tunavailableSymbols: [...prevState.unavailableSymbols, symbol],\n    // \t\t\t}));\n    // \t\t}\n    // \t\tconsole.log('obj', obj, symbol, index);\n    // \t});\n    // });\n\n  }\n\n  render() {\n    // console.log('props', this.props,this.props.sortConfig,'this.props.sortConfig')\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [\"Unavailable symbols:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.unavailableSymbols.map((symbol, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: symbol\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default TestFetch;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/build-screener/testFetch.component.jsx"],"names":["React","SYMBOLS","SP500","NAS100","DJ30","sleep","ms","Promise","resolve","setTimeout","TestFetch","Component","constructor","props","state","unavailableSymbols","componentDidMount","x","console","log","index","slice","length","sleepTime","u","render","map","symbol"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,wBAA7C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,KAAT,CAAeC,EAAf,EAAmB;AAClB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACA;;AAED,MAAMI,SAAN,SAAwBV,KAAK,CAACW,SAA9B,CAAwC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,kBAAkB,EAAE;AADR,KAAb;AAGA;;AACsB,QAAjBC,iBAAiB,GAAG;AACzB,UAAMC,CAAC,GAAG,MAAMZ,KAAK,CAAC,IAAD,CAArB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAFyB,CAIzB;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGlB,KAAK,CAACmB,KAAN,CAAY,CAAZ,EAAe,EAAf,EAAmBC,MAA/C,EAAuDF,KAAK,EAA5D,EAAgE;AAC/D,YAAMG,SAAS,GAAGH,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,SAASA,KAA3B,GAAmC,CAArD;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ,EAAuBH,KAAvB,EAA8BA,KAAK,GAAG,CAAtC,EAAyC,WAAzC;AAEA,YAAMI,CAAC,GAAG,MAAMnB,KAAK,CAACkB,SAAD,CAArB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAL+D,CAO/D;AACA;AACA,KAdwB,CAgBzB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEDM,EAAAA,MAAM,GAAG;AACR;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,sDAEC;AAAA,kBACE,KAAKX,KAAL,CAAWC,kBAAX,CAA8BW,GAA9B,CAAkC,CAACC,MAAD,EAASP,KAAT,kBAClC;AAAA,oBAAiBO;AAAjB,WAASP,KAAT;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUA;;AAtDsC;;AAyDxC,eAAeV,SAAf","sourcesContent":["import React from 'react';\n\nimport { SYMBOLS, SP500, NAS100, DJ30 } from '../../assets/constants';\n\n// function sleep(milliseconds) {\n// \tconst date = Date.now();\n// \tlet currentDate = null;\n// \tdo {\n// \t\tcurrentDate = Date.now();\n// \t} while (currentDate - date < milliseconds);\n// }\n\nfunction sleep(ms) {\n\treturn new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass TestFetch extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tunavailableSymbols: [],\n\t\t};\n\t}\n\tasync componentDidMount() {\n\t\tconst x = await sleep(5000);\n\t\tconsole.log('waited');\n\n\t\t// for (let index = 0; index < SP500.length; index++) {\n\t\tfor (let index = 0; index < SP500.slice(0, 15).length; index++) {\n\t\t\tconst sleepTime = index % 5 === 0 ? 100000 * index : 0;\n\t\t\tconsole.log(sleepTime, index, index % 5, 'sleep set');\n\n\t\t\tconst u = await sleep(sleepTime);\n\t\t\tconsole.log('waited');\n\n\t\t\t// const x = await sleep(sleepTime);\n\t\t\t// console.log('waited')\n\t\t}\n\n\t\t// // sleep(sleepTime).then(() => {\n\t\t// // \t// Do something after the sleep!\n\t\t// // \tconsole.log(sleepTime, index, 'sleep');\n\n\t\t// SP500.slice(0, 15).forEach((symbol, index) => {\n\t\t// \t// SP500.forEach((symbol, index) => {\n\t\t// \t// console.log('symbol', symbol);\n\n\t\t// \tthis.props.fetchRealTimeData([symbol], ['closePrice']).then(obj => {\n\t\t// \t\tif (!obj) {\n\t\t// \t\t\tthis.setState(prevState => ({\n\t\t// \t\t\t\tunavailableSymbols: [...prevState.unavailableSymbols, symbol],\n\t\t// \t\t\t}));\n\t\t// \t\t}\n\t\t// \t\tconsole.log('obj', obj, symbol, index);\n\t\t// \t});\n\t\t// });\n\t}\n\n\trender() {\n\t\t// console.log('props', this.props,this.props.sortConfig,'this.props.sortConfig')\n\t\treturn (\n\t\t\t<div className=''>\n\t\t\t\tUnavailable symbols:\n\t\t\t\t<ul>\n\t\t\t\t\t{this.state.unavailableSymbols.map((symbol, index) => (\n\t\t\t\t\t\t<li key={index}>{symbol}</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TestFetch;\n"]},"metadata":{},"sourceType":"module"}