{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/dropdown.component.jsx\";\nimport React from 'react';\nimport './dropdown.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    const {\n      defaultValue\n    } = props;\n    super(props);\n\n    this.handleClickOutside = event => {\n      const {\n        options\n      } = this.props;\n      const {\n        shownValue\n      } = this.state;\n\n      if (this.container.current && !this.container.current.contains(event.target)) {\n        const priorValue = this.state.selectedValue; // console.log(priorValue, this.state.shownValue,this.props.options)\n\n        console.log(options.includes(shownValue), 'click');\n\n        if (options.includes(shownValue)) {\n          this.setState({\n            showList: false,\n            displayedOptions: this.props.options\n          }, () => console.log('click out', this.state.selectedValue));\n        }\n      }\n    };\n\n    this.handleDisplay = () => {\n      const {\n        options\n      } = this.props;\n      const {\n        shownValue\n      } = this.state;\n      this.setState(prevState => {\n        // console.log(prevState,'prevState')\n        // console.log(this.container.current,'this.container.current')\n        // console.log(this.state.displayedOptions, 'this.state.displayedOptions')\n        if (!prevState.showList) {\n          console.log('add listener');\n          document.addEventListener('mousedown', this.handleClickOutside);\n        } else if (prevState.showList) {\n          console.log('remove listener');\n          document.removeEventListener('mousedown', this.handleClickOutside);\n        }\n\n        if (options.includes(shownValue)) {\n          return {\n            showList: !prevState.showList\n          };\n        }\n      });\n    };\n\n    this.handleOptionClick = (event, headerCol, valueRow) => {\n      // console.log(this.selectionDisplay.current.innerText,'this.selectionDisplay')\n      // console.log(event.target.innerText, this.state.shownValue)\n      const {\n        onChange\n      } = this.props;\n      this.setState({\n        selectedValue: event.target.innerText,\n        showList: false,\n        shownValue: event.target.innerText,\n        displayedOptions: this.props.options\n      }, () => {\n        // console.log(this.selectionDisplay.current.innerText,event.target.innerText)\n        if (this.selectionDisplay.current.innerText !== event.target.innerText) {\n          this.selectionDisplay.current.innerText = event.target.innerText;\n        } // return \n\n\n        onChange(this.state.selectedValue, headerCol, valueRow);\n      });\n    };\n\n    this.onTextChange = event => {\n      // console.log(event.currentTarget.textContent,'text change')\n      const {\n        options\n      } = this.props;\n      const currentInput = event.currentTarget.textContent; // console.log(currentInput)\n\n      const newFilteredOptions = options.filter(item => {\n        // console.log(item.toLowerCase().indexOf(currentInput.toLowerCase()), item)\n        // return item.toLowerCase().indexOf(currentInput.toLowerCase()) > -1 //filter if occurs at all\n        return item.toLowerCase().indexOf(currentInput.toLowerCase()) === 0; //filter all with the same start\n      }); // console.log(newFilteredOptions);\n\n      this.setState({\n        displayedOptions: newFilteredOptions,\n        showList: true,\n        shownValue: currentInput\n      } // ,\n      // ()=>console.log(this.state)\n      );\n    };\n\n    this.container = /*#__PURE__*/React.createRef();\n    this.selectionDisplay = /*#__PURE__*/React.createRef();\n    this.state = {\n      selectedValue: defaultValue,\n      showList: false,\n      displayedOptions: this.props.options,\n      shownValue: defaultValue\n    };\n  } //if click happens outside the dropdown area close the list\n\n\n  render() {\n    const {\n      options,\n      style\n    } = this.props;\n    const {\n      selectedValue,\n      showList,\n      displayedOptions,\n      shownValue\n    } = this.state; // console.log('a',this.props)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'dropdown-container',\n      style: {\n        gridRow: style.gridRow,\n        gridColumn: style.gridColumn\n      },\n      ref: this.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: showList ? 'selected-value active' : 'selected-value',\n        onClick: this.handleDisplay,\n        contentEditable: \"true\",\n        suppressContentEditableWarning: true,\n        onInput: this.onTextChange,\n        ref: this.selectionDisplay,\n        children: selectedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), showList && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"options-list\",\n        children: displayedOptions.map((value, index) => {\n          if (value !== selectedValue || shownValue !== selectedValue) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"dropdown-option\",\n              value: value,\n              onClick: e => this.handleOptionClick(e, style.gridColumn - 1, style.gridRow - 2),\n              children: value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this);\n          } else return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/dropdown.component.jsx"],"names":["React","Dropdown","Component","constructor","props","defaultValue","handleClickOutside","event","options","shownValue","state","container","current","contains","target","priorValue","selectedValue","console","log","includes","setState","showList","displayedOptions","handleDisplay","prevState","document","addEventListener","removeEventListener","handleOptionClick","headerCol","valueRow","onChange","innerText","selectionDisplay","onTextChange","currentInput","currentTarget","textContent","newFilteredOptions","filter","item","toLowerCase","indexOf","createRef","render","style","gridRow","gridColumn","map","value","index","e"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport './dropdown.styles.css';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n      const {defaultValue} = props;\n      super(props);\n      this.container = React.createRef();\n      this.selectionDisplay = React.createRef();\n\n      this.state = {\n          selectedValue: defaultValue,\n          showList: false,\n          displayedOptions: this.props.options,\n          shownValue: defaultValue\n      };\n    }\n\n    //if click happens outside the dropdown area close the list\n    handleClickOutside = event => {\n      const { options } = this.props;\n      const { shownValue } = this.state;\n\n      if(this.container.current && !this.container.current.contains(event.target)) {\n        const priorValue = this.state.selectedValue;\n        // console.log(priorValue, this.state.shownValue,this.props.options)\n        \n        console.log(options.includes(shownValue),'click')\n\n        if(options.includes(shownValue)) {\n          this.setState({\n            showList: false,\n            displayedOptions: this.props.options\n          }\n          ,\n          ()=>console.log('click out',this.state.selectedValue)\n          );\n        }\n\n      }\n    }\n\n    //handle the displaying of the list (if currently shown, then hide and vice versa)\n    handleDisplay = () => {\n      const { options } = this.props;\n      const { shownValue } = this.state;\n\n      this.setState(prevState => {\n        // console.log(prevState,'prevState')\n        // console.log(this.container.current,'this.container.current')\n        // console.log(this.state.displayedOptions, 'this.state.displayedOptions')\n\n        if(!prevState.showList) {\n          console.log('add listener')\n          document.addEventListener('mousedown', this.handleClickOutside);\n        }\n        else if(prevState.showList) {\n          console.log('remove listener')\n          document.removeEventListener('mousedown', this.handleClickOutside);\n        }\n\n        if(options.includes(shownValue)){\n          return { \n                    showList: !prevState.showList\n                }\n        }\n      });\n    };\n\n    // set text based on click in displayed list\n    handleOptionClick = (event, headerCol, valueRow) => {\n      // console.log(this.selectionDisplay.current.innerText,'this.selectionDisplay')\n      // console.log(event.target.innerText, this.state.shownValue)\n      const { onChange } = this.props;\n\n      this.setState({\n        selectedValue: event.target.innerText,\n        showList: false,\n        shownValue: event.target.innerText,\n        displayedOptions: this.props.options\n      }\n        , \n        () => {\n          // console.log(this.selectionDisplay.current.innerText,event.target.innerText)\n            if(this.selectionDisplay.current.innerText !== event.target.innerText) {\n              this.selectionDisplay.current.innerText = event.target.innerText;\n            }\n          // return \n            onChange(this.state.selectedValue, headerCol, valueRow);\n        }      \n      \n      );\n\n    };\n\n    onTextChange = event => {\n      // console.log(event.currentTarget.textContent,'text change')\n      const { options } = this.props;\n\n      const currentInput = event.currentTarget.textContent;\n      // console.log(currentInput)\n\n      const newFilteredOptions = options.filter(item => {\n        // console.log(item.toLowerCase().indexOf(currentInput.toLowerCase()), item)\n        // return item.toLowerCase().indexOf(currentInput.toLowerCase()) > -1 //filter if occurs at all\n        return item.toLowerCase().indexOf(currentInput.toLowerCase()) === 0 //filter all with the same start\n      });\n\n      // console.log(newFilteredOptions);\n\n      this.setState({\n        displayedOptions: newFilteredOptions,\n        showList: true,\n        shownValue: currentInput\n      }\n      // ,\n      // ()=>console.log(this.state)\n      )\n    }\n\n  \n    render() {\n      const { options, style } = this.props;\n      const { selectedValue, showList, displayedOptions, shownValue } = this.state;\n      // console.log('a',this.props)\n      \n\n      return (\n        <div \n          className={'dropdown-container'}\n          style={{ \n            gridRow: style.gridRow,\n            gridColumn: style.gridColumn,\n          }}\n          ref = {this.container}\n        >\n          <div \n            className={showList ? 'selected-value active' : 'selected-value'}\n            onClick={this.handleDisplay}  \n            contentEditable='true'\n            suppressContentEditableWarning={true}\n            onInput={this.onTextChange}\n            ref = {this.selectionDisplay}\n          >\n            {selectedValue}\n          </div>\n          {/* WON'T WORK AS INPUT DOES NOT SUPPORT PSEUDO ELEMENTS\n          <input\n            className={showList ? 'selected-value active' : 'selected-value'}\n            type='text'\n            name='userInput'\n            value={selectedValue}\n            onClick={this.handleDisplay}  \n          /> */}\n\n            {showList && (<ul className='options-list'>\n              {displayedOptions.map((value, index) => {\n                if(value !== selectedValue || shownValue !== selectedValue) {\n                  return(\n                    <li \n                      className='dropdown-option'\n                      value={value} \n                      key={index}\n                      onClick={e => this.handleOptionClick(e, style.gridColumn-1, style.gridRow-2)}\n                    >\n                      {value}\n                    </li>\n                  )}\n                  else return null;\n              })}\n            </ul>)}\n        </div>\n      );\n    }\n  }\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}