{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-column-button/add-column-button.component.jsx\";\nimport React from 'react';\nimport Modal from '../modal/modal.component';\nimport IndicatorSelector from '../indicator-selector/indicator-selector.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst indicatorsMap = {\n  '52 Week High': '52WkHigh',\n  '52 Week Low': '52WkLow',\n  'Ask Price': 'askPrice',\n  'Ask Size': 'askSize',\n  'Asset Type': 'assetType',\n  'Bid Price': 'bidPrice',\n  'Bid Size': 'bidSize',\n  'Close Price': 'closePrice',\n  'Dividend Amount': 'divAmount',\n  'Dividend Date': 'divDate',\n  'Dividend Yield': 'divYield',\n  'Exchange': 'exchangeName',\n  'High Price': 'highPrice',\n  'Last Price': 'lastPrice',\n  'Last Size': 'lastSize',\n  'Low Price': 'lowPrice',\n  'Mark': 'mark',\n  'Mark Change': 'markChangeInDouble',\n  'Mark Change (%)': 'markPercentChangeInDouble',\n  'Net Asset Value': 'nAV',\n  'Net Change': 'netChange',\n  'Net Change (%)': 'netPercentChangeInDouble',\n  'Open Price': 'openPrice',\n  'PE Ratio': 'peRatio',\n  'Volume': 'totalVolume',\n  'Volatility': 'volatility'\n};\n\nclass AddColumnButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.show = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.deriveIndicatorsArr = indicators => indicators.map((indicator, index) => ({\n      name: indicator,\n      id: index,\n      selected: true\n    }));\n\n    this.handleOkCancel = (type, updatedState) => {\n      this.hide();\n\n      if (type === 'ok') {\n        //USE THIS, REMOVE BELOW\n        // const columnNames = updatedState.usedIndicators.map(item => item.name);\n        // this.props.handleColumnUpdate(columnNames);\n        this.setState(updatedState, () => {\n          const columnNames = this.state.usedIndicators.map(item => item.name); // console.log(columnNames)\n\n          this.props.handleColumnUpdate(columnNames);\n        });\n      }\n    };\n\n    this.state = {\n      visible: false,\n      //TEMPORARY TO TEST PASSING OF STATE - REMOVE AFTERWARDS\n      availableIndicators: [{\n        name: 'Price',\n        id: 0,\n        selected: false\n      }, {\n        name: 'SMA',\n        id: 1,\n        selected: false\n      }, {\n        name: 'EMA',\n        id: 2,\n        selected: false\n      }, {\n        name: 'Open',\n        id: 3,\n        selected: true\n      }, {\n        name: 'Close',\n        id: 4,\n        selected: false\n      }],\n      usedIndicators: []\n    };\n  }\n\n  render() {\n    const {\n      usedIndicators\n    } = this.props; // console.log(this.deriveIndicatorsArr(usedIndicators))\n\n    const availableIndicators = Object.keys(indicatorsMap).filter(value => !usedIndicators.includes(value)); // console.log(availableIndicators,'k')\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.show,\n        className: \"add-column-button\",\n        style: this.props.style,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: this.state.visible,\n        onClose: this.hide,\n        width: 60,\n        height: 50,\n        measure: '%',\n        showCloseButton: false,\n        closeOnEsc: false,\n        closeMaskOnClick: false,\n        children: /*#__PURE__*/_jsxDEV(IndicatorSelector, {\n          handleOkCancel: this.handleOkCancel,\n          availableIndicators: this.deriveIndicatorsArr(availableIndicators),\n          usedIndicators: this.deriveIndicatorsArr(usedIndicators)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddColumnButton;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-column-button/add-column-button.component.jsx"],"names":["React","Modal","IndicatorSelector","indicatorsMap","AddColumnButton","Component","constructor","props","show","setState","visible","hide","deriveIndicatorsArr","indicators","map","indicator","index","name","id","selected","handleOkCancel","type","updatedState","columnNames","state","usedIndicators","item","handleColumnUpdate","availableIndicators","render","Object","keys","filter","value","includes","style"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from '../modal/modal.component';\n\nimport IndicatorSelector from '../indicator-selector/indicator-selector.component';\n\n\nconst indicatorsMap = {\n\t'52 Week High': '52WkHigh',\n\t'52 Week Low': '52WkLow',\n\t'Ask Price': 'askPrice',\n\t'Ask Size': 'askSize',\n\t'Asset Type': 'assetType',\n\t'Bid Price': 'bidPrice',\n\t'Bid Size': 'bidSize',\n\t'Close Price': 'closePrice',\n\t'Dividend Amount': 'divAmount',\n\t'Dividend Date': 'divDate',\n\t'Dividend Yield': 'divYield',\n\t'Exchange': 'exchangeName',\n\t'High Price': 'highPrice',\n\t'Last Price': 'lastPrice',\n\t'Last Size': 'lastSize',\n\t'Low Price': 'lowPrice',\n\t'Mark': 'mark',\n\t'Mark Change': 'markChangeInDouble',\n\t'Mark Change (%)': 'markPercentChangeInDouble',\n\t'Net Asset Value': 'nAV',\n\t'Net Change': 'netChange',\n\t'Net Change (%)': 'netPercentChangeInDouble',\n\t'Open Price': 'openPrice',\n\t'PE Ratio': 'peRatio',\n\t'Volume': 'totalVolume',\n\t'Volatility': 'volatility' \n};\n\nclass AddColumnButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            visible: false,\n            //TEMPORARY TO TEST PASSING OF STATE - REMOVE AFTERWARDS\n            availableIndicators: [\n                {name: 'Price', id: 0, selected: false},\n                {name: 'SMA', id: 1, selected: false}, \n                {name: 'EMA', id: 2, selected: false}, \n                {name: 'Open', id: 3, selected: true},\n                {name: 'Close', id: 4, selected: false}\n            ],\n            usedIndicators: []\n        };\n    }\n\n    show = () => {\n        this.setState({ visible: true });\n    }\n\n    hide = () => {\n        this.setState({ visible: false });\n    }\n\n    deriveIndicatorsArr = indicators => indicators.map((indicator, index) => ({\n            name: indicator, id: index, selected: true\n        })\n    )\n    \n\n    //TEMPORARY METHOD TO TEST PASSING OF STATE - REMOVE AFTERWARDS\n    handleOkCancel = (type, updatedState) => {\n        this.hide();\n        if(type === 'ok') {\n            //USE THIS, REMOVE BELOW\n            // const columnNames = updatedState.usedIndicators.map(item => item.name);\n            // this.props.handleColumnUpdate(columnNames);\n\n            this.setState(updatedState\n                ,\n                () => {\n                    const columnNames = this.state.usedIndicators.map(item => item.name)\n                    // console.log(columnNames)\n                    this.props.handleColumnUpdate(columnNames);\n                }\n            );\n        }\n    }\n\n    render() {\n        const { usedIndicators } = this.props;\n        // console.log(this.deriveIndicatorsArr(usedIndicators))\n\n        const availableIndicators = Object.keys(indicatorsMap).filter(value => !usedIndicators.includes(value));\n        // console.log(availableIndicators,'k')\n\n        return (\n            <>\n                <button \n                    onClick={this.show}\n                    className=\"add-column-button\" \n                    style={this.props.style}\n                >\n                    +\n                </button>\n\n                <Modal \n                    visible={this.state.visible} \n                    onClose={this.hide}\n                    width={60}\n                    height={50}\n                    measure={'%'}\n                    showCloseButton={false}\n                    closeOnEsc={false}\n                    closeMaskOnClick={false}\n                >\n                    <IndicatorSelector \n                        handleOkCancel={this.handleOkCancel}\n                        availableIndicators={this.deriveIndicatorsArr(availableIndicators)}\n                        usedIndicators={this.deriveIndicatorsArr(usedIndicators)}\n                    />\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default AddColumnButton;"]},"metadata":{},"sourceType":"module"}