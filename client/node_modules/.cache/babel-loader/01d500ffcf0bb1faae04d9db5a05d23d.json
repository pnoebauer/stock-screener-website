{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/modal/modal.example.jsx\";\nimport React from 'react';\nimport Modal from './modal.component';\nimport IndicatorSelector from '../indicator-selector/indicator-selector.component'; // include styles\n\nimport './modal.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.show = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleConfirm = updatedState => {\n      this.hide();\n      console.log(updatedState);\n      this.setState(updatedState, () => console.log(this.state));\n    };\n\n    this.state = {\n      visible: false,\n      //TEMPORARY TO TEST PASSING OF STATE - REMOVE AFTERWARDS\n      availableIndicators: [{\n        name: 'SMA',\n        id: 0,\n        selected: false\n      }, {\n        name: 'EMA',\n        id: 1,\n        selected: false\n      }, {\n        name: 'Open',\n        id: 2,\n        selected: true\n      }, {\n        name: 'Close',\n        id: 3,\n        selected: false\n      }],\n      usedIndicators: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.show,\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: this.state.visible,\n        onClose: this.hide,\n        width: 60,\n        height: 50,\n        measure: '%',\n        children: /*#__PURE__*/_jsxDEV(IndicatorSelector, {\n          handleConfirm: this.handleConfirm,\n          availableIndicators: this.state.availableIndicators,\n          usedIndicators: this.state.usedIndicators\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModalExample;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/modal/modal.example.jsx"],"names":["React","Modal","IndicatorSelector","ModalExample","Component","constructor","props","show","setState","visible","hide","handleConfirm","updatedState","console","log","state","availableIndicators","name","id","selected","usedIndicators","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAOC,iBAAP,MAA8B,oDAA9B,C,CAEA;;AACA,OAAO,oBAAP;;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAenBC,IAfmB,GAeZ,MAAM;AACT,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAjBkB;;AAAA,SAmBnBC,IAnBmB,GAmBZ,MAAM;AACT,WAAKF,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KArBkB;;AAAA,SAwBnBE,aAxBmB,GAwBHC,YAAY,IAAI;AAC5B,WAAKF,IAAL;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,WAAKJ,QAAL,CAAcI,YAAd,EAA2B,MAAIC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,CAA/B;AACH,KA5BkB;;AAEf,SAAKA,KAAL,GAAa;AACTN,MAAAA,OAAO,EAAE,KADA;AAET;AACAO,MAAAA,mBAAmB,EAAE,CACjB;AAACC,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,EAAE,EAAE,CAAlB;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OADiB,EAEjB;AAACF,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,EAAE,EAAE,CAAlB;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAFiB,EAGjB;AAACF,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,EAAE,EAAE,CAAnB;AAAsBC,QAAAA,QAAQ,EAAE;AAAhC,OAHiB,EAIjB;AAACF,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,EAAE,EAAE,CAApB;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OAJiB,CAHZ;AASTC,MAAAA,cAAc,EAAE;AATP,KAAb;AAWH;;AAiBDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKd,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,KAAD;AACI,QAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWN,OADxB;AAEI,QAAA,OAAO,EAAE,KAAKC,IAFlB;AAGI,QAAA,KAAK,EAAE,EAHX;AAII,QAAA,MAAM,EAAE,EAJZ;AAKI,QAAA,OAAO,EAAE,GALb;AAAA,+BAOI,QAAC,iBAAD;AACI,UAAA,aAAa,EAAE,KAAKC,aADxB;AAEI,UAAA,mBAAmB,EAAE,KAAKI,KAAL,CAAWC,mBAFpC;AAGI,UAAA,cAAc,EAAE,KAAKD,KAAL,CAAWK;AAH/B;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AApDsC;;AAuD3C,eAAejB,YAAf","sourcesContent":["import React from 'react';\nimport Modal from './modal.component';\n\nimport IndicatorSelector from '../indicator-selector/indicator-selector.component';\n\n// include styles\nimport './modal.styles.css';\n\nclass ModalExample extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            visible: false,\n            //TEMPORARY TO TEST PASSING OF STATE - REMOVE AFTERWARDS\n            availableIndicators: [\n                {name: 'SMA', id: 0, selected: false}, \n                {name: 'EMA', id: 1, selected: false}, \n                {name: 'Open', id: 2, selected: true},\n                {name: 'Close', id: 3, selected: false}\n            ],\n            usedIndicators: []\n        };\n    }\n\n    show = () => {\n        this.setState({ visible: true });\n    }\n\n    hide = () => {\n        this.setState({ visible: false });\n    }\n\n    //TEMPORARY METHOD TO TEST PASSING OF STATE - REMOVE AFTERWARDS\n    handleConfirm = updatedState => {\n        this.hide();\n        console.log(updatedState)\n        this.setState(updatedState,()=>console.log(this.state))\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.show}>show</button>\n\n                <Modal \n                    visible={this.state.visible} \n                    onClose={this.hide}\n                    width={60}\n                    height={50}\n                    measure={'%'}\n                >\n                    <IndicatorSelector \n                        handleConfirm={this.handleConfirm}\n                        availableIndicators={this.state.availableIndicators}\n                        usedIndicators={this.state.usedIndicators}\n                    />\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}