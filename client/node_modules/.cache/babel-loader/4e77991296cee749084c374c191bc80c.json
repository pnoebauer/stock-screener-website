{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/clock.component.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date().toLocaleString()\n    };\n  } //method that updates the time property of state to the current time\n\n\n  tick() {\n    this.setState({\n      time: new Date().toLocaleString()\n    });\n  } //upon mounting setInterval to continuously call the tick method\n\n\n  componentDidMount() {\n    this.intervalId = set;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"App-clock\",\n      children: [\"The time is \", this.state.time, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Clock;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/clock.component.jsx"],"names":["React","Clock","Component","constructor","props","state","time","Date","toLocaleString","tick","setState","componentDidMount","intervalId","set","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AADK,KAAb;AAGD,GANiC,CAQlC;;;AACAC,EAAAA,IAAI,GAAG;AACL,SAAKC,QAAL,CAAc;AACZJ,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AADM,KAAd;AAGD,GAbiC,CAelC;;;AACAG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,GAAlB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA,iCACe,KAAKT,KAAL,CAAWC,IAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA1BiC;;AA6BpC,eAAeL,KAAf","sourcesContent":["import React from 'react';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date().toLocaleString()\n    };\n  }\n\n  //method that updates the time property of state to the current time\n  tick() {\n    this.setState({\n      time: new Date().toLocaleString()\n    });\n  }\n\n  //upon mounting setInterval to continuously call the tick method\n  componentDidMount() {\n      this.intervalId = set\n  }\n\n  render() {\n    return (\n      <p className=\"App-clock\">\n        The time is {this.state.time}.\n      </p>\n    );\n  }\n} \n\nexport default Clock;"]},"metadata":{},"sourceType":"module"}