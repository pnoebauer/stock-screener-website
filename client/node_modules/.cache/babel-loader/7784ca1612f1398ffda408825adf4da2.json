{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/radarscreen.component.jsx\";\nimport React from 'react';\nimport Dropdown from './dropdown.component';\nimport { SYMBOLS, INTERVALS } from '../assets/constants';\nimport './radarscreen.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://api.tdameritrade.com/v1/marketdata/quotes';\nconst apikey = 'APRKWXOAWALLEUMXPY1FCGHQZ5HDJGKD';\nconst headerConst = ['Symbol', 'Interval', 'Price'];\nconst selectTbl = {\n  Symbol: SYMBOLS,\n  Interval: INTERVALS\n};\n\nconst retrieveData = () => {\n  const symbol = SYMBOLS;\n  const params = {\n    apikey,\n    symbol\n  };\n  const queryExt = new URLSearchParams(params).toString();\n  const queryString = url.concat('?', queryExt);\n  fetch(queryString).then(response => response.json()).then(data => console.log(data));\n};\n\nclass RadarScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = (updatedValue, headerCol, valueRow) => {\n      const stateKey = this.state.header[headerCol];\n      const values = [...this.state[stateKey]];\n      values[valueRow] = updatedValue; // console.log('change', stateKey, updatedValue, this.state.header[headerCol], valueRow);\n\n      let symbol = updatedValue,\n          interval = updatedValue;\n\n      if (stateKey === 'Symbol') {\n        interval = this.state.Interval[valueRow];\n      } else if (stateKey === 'Interval') {\n        symbol = this.state.Symbol[valueRow];\n      } // console.log('symbol', symbol, 'interval', interval);\n\n\n      this.setState({\n        [stateKey]: values\n      }, () => {// console.log('updated state',this.state[stateKey])\n      });\n    };\n\n    this.state = {\n      header: headerConst,\n      Symbol: ['SPX', '@ES', '@NQ', 'SPY'],\n      Interval: ['Daily', 'Daily', '5 Min', 'Hourly'],\n      Price: [3, 6, 8, 0]\n    };\n  }\n\n  // onChange = key => (updatedValue, headerCol, valueRow) => {\n  // \t// console.log('change', key, updatedValue, this.state.header[headerCol], valueRow);\n  // \tconst stateKey = this.state.header[headerCol];\n  // \tconst values = [...this.state[stateKey]];\n  // \t// console.log('values',values, stateKey);\n  // \tvalues[valueRow] = updatedValue;\n  // \t// console.log('updatedValue',values);\n  // \t// console.log('state', this.state[stateKey]);\n  // \tthis.setState({\n  // \t\t[stateKey]: values\n  // \t}\n  // \t// , () => console.log('updated state',this.state[stateKey])\n  // \t);\n  // }\n  render() {\n    let i = 0;\n    const {\n      header\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radarscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grid-container\",\n        children: [header.map((value, colIdx) => {\n          i++;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: i,\n            className: \"header\",\n            style: {\n              gridRow: 1,\n              gridColumn: colIdx + 1\n            },\n            children: value\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }, this);\n        }), header.map((value, colIdx) => this.state[value].map((rowVal, rowIdx) => {\n          i++;\n\n          if (selectTbl[header[colIdx]] !== undefined) {\n            return /*#__PURE__*/_jsxDEV(Dropdown, {\n              options: selectTbl[header[colIdx]],\n              defaultValue: this.state[header[colIdx]][rowIdx],\n              style: {\n                gridRow: rowIdx + 2,\n                gridColumn: colIdx + 1\n              },\n              id: i // onChange={this.onChange(i)}\n              ,\n              onChange: this.onChange\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: i,\n              className: \"item\",\n              style: {\n                gridRow: rowIdx + 2,\n                gridColumn: colIdx + 1\n              },\n              children: rowVal\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 11\n            }, this);\n          }\n        }))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default RadarScreen;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/radarscreen.component.jsx"],"names":["React","Dropdown","SYMBOLS","INTERVALS","url","apikey","headerConst","selectTbl","Symbol","Interval","retrieveData","symbol","params","queryExt","URLSearchParams","toString","queryString","concat","fetch","then","response","json","data","console","log","RadarScreen","Component","constructor","props","onChange","updatedValue","headerCol","valueRow","stateKey","state","header","values","interval","setState","Price","render","i","map","value","colIdx","gridRow","gridColumn","rowVal","rowIdx","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Dropdown from './dropdown.component';\n\nimport { SYMBOLS, INTERVALS } from '../assets/constants';\n\nimport './radarscreen.styles.css';\n\nconst url = 'https://api.tdameritrade.com/v1/marketdata/quotes';\nconst apikey = 'APRKWXOAWALLEUMXPY1FCGHQZ5HDJGKD';\n\nconst headerConst = ['Symbol', 'Interval', 'Price']\n\nconst selectTbl = {\n\tSymbol: SYMBOLS,\n\tInterval: INTERVALS\n}\n\nconst retrieveData = () => {\n\n\tconst symbol = SYMBOLS;\n\tconst params = {apikey, symbol};\n\t\n\tconst queryExt = new URLSearchParams(params).toString();\n\tconst queryString = url.concat('?', queryExt);\n\n\tfetch(queryString)\n\t\t.then(response => response.json())\n\t\t.then(data => console.log(data))\n}\n\nclass RadarScreen extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\theader: headerConst,\n\t\t\tSymbol: ['SPX', '@ES', '@NQ', 'SPY'],\n\t\t\tInterval: ['Daily', 'Daily', '5 Min', 'Hourly'],\n\t\t\tPrice: [3, 6, 8, 0]\n\t\t}\n\t}\n\n\tonChange = (updatedValue, headerCol, valueRow) => {\n\n\t\tconst stateKey = this.state.header[headerCol];\n\t\tconst values = [...this.state[stateKey]];\n\t\tvalues[valueRow] = updatedValue;\n\n\t\t// console.log('change', stateKey, updatedValue, this.state.header[headerCol], valueRow);\n\t\t\n\t\tlet symbol = updatedValue, interval = updatedValue;\n\t\tif (stateKey==='Symbol') {\n\t\t\tinterval = this.state.Interval[valueRow];\n\t\t}\n\t\telse if (stateKey==='Interval'){\n\t\t\tsymbol = this.state.Symbol[valueRow];\n\t\t}\n\n\t\t// console.log('symbol', symbol, 'interval', interval);\n\n\t\tthis.setState({\n\t\t\t[stateKey]: values\n\t\t}\n\t\t, () => {\n\t\t\t// console.log('updated state',this.state[stateKey])\n\t\t}\n\t\t);\n\n\n\t}\n\n\t// onChange = key => (updatedValue, headerCol, valueRow) => {\n\t// \t// console.log('change', key, updatedValue, this.state.header[headerCol], valueRow);\n\n\t// \tconst stateKey = this.state.header[headerCol];\n\t// \tconst values = [...this.state[stateKey]];\n\n\t// \t// console.log('values',values, stateKey);\n\t// \tvalues[valueRow] = updatedValue;\n\n\t// \t// console.log('updatedValue',values);\n\t// \t// console.log('state', this.state[stateKey]);\n\n\t// \tthis.setState({\n\t// \t\t[stateKey]: values\n\t// \t}\n\t// \t// , () => console.log('updated state',this.state[stateKey])\n\t// \t);\n\t// }\n\n\trender() {\n\tlet i=0;\n\n\tconst { header } = this.state;\n\n\t\treturn(\n\t\t\t<div className=\"radarscreen\">\n\t\t\t\t<div className='space'></div>\n\t\t\t\t\n\t\t\t\t<div id=\"grid-container\">\n\t\t\t\t\t{\n\t\t\t\t\t\theader.map((value, colIdx) => {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\t\tid={i} \n\t\t\t\t\t\t\t\t\tclassName='header'\n\t\t\t\t\t\t\t\t\tstyle={{ \n\t\t\t\t\t\t\t\t\t\tgridRow: 1,\n\t\t\t\t\t\t\t\t\t\tgridColumn: colIdx+1}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\theader.map((value, colIdx) => this.state[value].map((rowVal,rowIdx) => {\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\tif(selectTbl[header[colIdx]] !== undefined) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Dropdown \n\t\t\t\t\t\t\t\t\t\t\toptions={selectTbl[header[colIdx]]}\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state[header[colIdx]][rowIdx]}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ \n\t\t\t\t\t\t\t\t\t\t\t\tgridRow: rowIdx+2,\n\t\t\t\t\t\t\t\t\t\t\t\tgridColumn: colIdx+1}}\n\t\t\t\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\t\t\t\tid={i} \n\t\t\t\t\t\t\t\t\t\t\t// onChange={this.onChange(i)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\t\t\t\tid={i} \n\t\t\t\t\t\t\t\t\t\t\tclassName='item'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ \n\t\t\t\t\t\t\t\t\t\t\t\tgridRow: rowIdx+2,\n\t\t\t\t\t\t\t\t\t\t\t\tgridColumn: colIdx+1}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{rowVal}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) \n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default RadarScreen;"]},"metadata":{},"sourceType":"module"}