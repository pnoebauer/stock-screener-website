{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-stock-universe-button/add-stock-universe-button.component.jsx\";\nimport React from 'react';\nimport Modal from '../modal/modal.component';\nimport IndicatorsList from '../indicators-list/indicators-list.component';\nimport { INDICATORS_TO_API } from '../../assets/constants';\nimport './add-stock-universe-button.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddStockUniverseButton extends React.Component {\n  constructor(props) {\n    // console.log('constructor add')\n    super(props);\n\n    this.show = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      visible: false,\n      universes: {\n        id: 1,\n        name: 'SP500',\n        selected: false\n      }\n    };\n  }\n\n  // deriveIndicatorsArr = indicators => indicators.map((indicator, index) => ({\n  //         name: indicator, id: indicator, selected: false\n  //     })\n  // )\n  // handleOkCancel = (type, updatedState) => {\n  //     this.hide();\n  //     if(type === 'ok') {\n  //         const columnNames = updatedState.usedIndicators.map(item => item.name);\n  //         this.props.handleColumnUpdate(columnNames);\n  //     }\n  // }\n  render() {\n    // // console.log('ab',this.props)\n    // const { usedIndicatorsDefault } = this.props;\n    // // console.log(this.deriveIndicatorsArr(usedIndicatorsDefault))\n    // const availableIndicatorsDefault = Object.keys(INDICATORS_TO_API).filter(value => !usedIndicatorsDefault.includes(value));\n    // // console.log(availableIndicators,'k')\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.show,\n        className: \"add-stock-universe-button\",\n        style: this.props.style,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: this.state.visible,\n        onClose: this.hide,\n        width: 60,\n        height: 50,\n        measure: '%',\n        showCloseButton: true,\n        closeOnEsc: true,\n        closeMaskOnClick: false,\n        enterAnimation: 'zoom',\n        leaveAnimation: 'zoom',\n        duration: 500,\n        children: /*#__PURE__*/_jsxDEV(IndicatorsList, {\n          displayedIndicators: [{\n            name: 'a',\n            id: 1\n          }, {\n            name: 'b',\n            id: 2\n          }, {\n            name: 'c',\n            id: 3\n          }] // onToggle={}\n          ,\n          className: 'universes',\n          headerName: 'Universe',\n          style: {\n            width: '80%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddStockUniverseButton;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-stock-universe-button/add-stock-universe-button.component.jsx"],"names":["React","Modal","IndicatorsList","INDICATORS_TO_API","AddStockUniverseButton","Component","constructor","props","show","setState","visible","hide","state","universes","id","name","selected","render","style","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,OAAOC,cAAP,MAA2B,8CAA3B;AAEA,SAASC,iBAAT,QAAkC,wBAAlC;AAEA,OAAO,wCAAP;;;;AAEA,MAAMC,sBAAN,SAAqCJ,KAAK,CAACK,SAA3C,CAAqD;AAEjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,UAAMA,KAAN;;AAFe,SAanBC,IAbmB,GAaZ,MAAM;AACT,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAfkB;;AAAA,SAiBnBC,IAjBmB,GAiBZ,MAAM;AACT,WAAKF,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAnBkB;;AAGf,SAAKE,KAAL,GAAa;AACTF,MAAAA,OAAO,EAAE,KADA;AAETG,MAAAA,SAAS,EAAE;AACPC,QAAAA,EAAE,EAAE,CADG;AAEPC,QAAAA,IAAI,EAAE,OAFC;AAGPC,QAAAA,QAAQ,EAAE;AAHH;AAFF,KAAb;AAQH;;AAUD;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AAEA;AACA;AAEA,wBACI;AAAA,8BACI;AACI,QAAA,OAAO,EAAE,KAAKT,IADlB;AAEI,QAAA,SAAS,EAAC,2BAFd;AAGI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWW,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,KAAD;AACI,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWF,OADxB;AAEI,QAAA,OAAO,EAAE,KAAKC,IAFlB;AAGI,QAAA,KAAK,EAAE,EAHX;AAII,QAAA,MAAM,EAAE,EAJZ;AAKI,QAAA,OAAO,EAAE,GALb;AAMI,QAAA,eAAe,EAAE,IANrB;AAOI,QAAA,UAAU,EAAE,IAPhB;AAQI,QAAA,gBAAgB,EAAE,KARtB;AASI,QAAA,cAAc,EAAE,MATpB;AAUI,QAAA,cAAc,EAAE,MAVpB;AAWI,QAAA,QAAQ,EAAE,GAXd;AAAA,+BAaI,QAAC,cAAD;AACI,UAAA,mBAAmB,EAAE,CAAC;AAACI,YAAAA,IAAI,EAAE,GAAP;AAAYD,YAAAA,EAAE,EAAE;AAAhB,WAAD,EAAoB;AAACC,YAAAA,IAAI,EAAE,GAAP;AAAYD,YAAAA,EAAE,EAAE;AAAhB,WAApB,EAAuC;AAACC,YAAAA,IAAI,EAAE,GAAP;AAAYD,YAAAA,EAAE,EAAE;AAAhB,WAAvC,CADzB,CAEI;AAFJ;AAGI,UAAA,SAAS,EAAE,WAHf;AAII,UAAA,UAAU,EAAE,UAJhB;AAKI,UAAA,KAAK,EAAE;AAACK,YAAAA,KAAK,EAAE;AAAR;AALX;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,oBADJ;AAiCH;;AA9EgD;;AAiFrD,eAAef,sBAAf","sourcesContent":["import React from 'react';\nimport Modal from '../modal/modal.component';\n\nimport IndicatorsList from '../indicators-list/indicators-list.component';\n\nimport { INDICATORS_TO_API } from '../../assets/constants';\n\nimport './add-stock-universe-button.styles.css';\n\nclass AddStockUniverseButton extends React.Component {\n\n    constructor(props) {\n        // console.log('constructor add')\n        super(props);\n        this.state = { \n            visible: false,\n            universes: {\n                id: 1,\n                name: 'SP500',\n                selected: false\n            }\n        };\n    }\n\n    show = () => {\n        this.setState({ visible: true });\n    }\n\n    hide = () => {\n        this.setState({ visible: false });\n    }\n\n    // deriveIndicatorsArr = indicators => indicators.map((indicator, index) => ({\n    //         name: indicator, id: indicator, selected: false\n    //     })\n    // )\n    \n\n    // handleOkCancel = (type, updatedState) => {\n    //     this.hide();\n    //     if(type === 'ok') {\n    //         const columnNames = updatedState.usedIndicators.map(item => item.name);\n    //         this.props.handleColumnUpdate(columnNames);\n    //     }\n    // }\n\n    render() {\n        // // console.log('ab',this.props)\n        // const { usedIndicatorsDefault } = this.props;\n        // // console.log(this.deriveIndicatorsArr(usedIndicatorsDefault))\n\n        // const availableIndicatorsDefault = Object.keys(INDICATORS_TO_API).filter(value => !usedIndicatorsDefault.includes(value));\n        // // console.log(availableIndicators,'k')\n\n        return (\n            <>\n                <button \n                    onClick={this.show}\n                    className=\"add-stock-universe-button\" \n                    style={this.props.style}\n                >\n                    +\n                </button>\n\n                <Modal \n                    visible={this.state.visible} \n                    onClose={this.hide}\n                    width={60}\n                    height={50}\n                    measure={'%'}\n                    showCloseButton={true}\n                    closeOnEsc={true}\n                    closeMaskOnClick={false}\n                    enterAnimation={'zoom'}\n                    leaveAnimation={'zoom'}\n                    duration={500}\n                >\n                    <IndicatorsList \n                        displayedIndicators={[{name: 'a', id: 1},{name: 'b', id: 2},{name: 'c', id: 3}]}\n                        // onToggle={}\n                        className={'universes'}\n                        headerName={'Universe'}\n                        style={{width: '80%'}}\n                    />\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default AddStockUniverseButton;"]},"metadata":{},"sourceType":"module"}