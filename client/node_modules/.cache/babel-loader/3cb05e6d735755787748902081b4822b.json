{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-column-button/add-column-button.component.jsx\";\nimport React from 'react';\nimport Modal from '../modal/modal.component';\nimport IndicatorSelector from '../indicator-selector/indicator-selector.component';\nimport { INDICATORS_TO_API } from '../../assets/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddColumnButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.show = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.deriveIndicatorsArr = indicators => indicators.map((indicator, index) => ({\n      name: indicator,\n      id: indicator,\n      selected: false\n    }));\n\n    this.handleOkCancel = (type, updatedState) => {\n      this.hide();\n\n      if (type === 'ok') {\n        const columnNames = updatedState.usedIndicators.map(item => item.name);\n        this.props.handleColumnUpdate(columnNames);\n      }\n    };\n\n    this.state = {\n      visible: false\n    };\n  }\n\n  render() {\n    const {\n      usedIndicatorsDefault\n    } = this.props; // console.log(this.deriveIndicatorsArr(usedIndicatorsDefault))\n\n    const availableIndicatorsDefault = Object.keys(INDICATORS_TO_API).filter(value => !usedIndicatorsDefault.includes(value)); // console.log(availableIndicators,'k')\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.show,\n        className: \"add-column-button\",\n        style: this.props.style,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: this.state.visible,\n        onClose: this.hide,\n        width: 60,\n        height: 50,\n        measure: '%',\n        showCloseButton: false,\n        closeOnEsc: false,\n        closeMaskOnClick: false,\n        children: /*#__PURE__*/_jsxDEV(IndicatorSelector, {\n          handleOkCancel: this.handleOkCancel,\n          availableIndicatorsDefault: this.deriveIndicatorsArr(availableIndicatorsDefault),\n          usedIndicatorsDefault: this.deriveIndicatorsArr(usedIndicatorsDefault)\n        }, this.props.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddColumnButton;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-column-button/add-column-button.component.jsx"],"names":["React","Modal","IndicatorSelector","INDICATORS_TO_API","AddColumnButton","Component","constructor","props","show","setState","visible","hide","deriveIndicatorsArr","indicators","map","indicator","index","name","id","selected","handleOkCancel","type","updatedState","columnNames","usedIndicators","item","handleColumnUpdate","state","render","usedIndicatorsDefault","availableIndicatorsDefault","Object","keys","filter","value","includes","style","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,OAAOC,iBAAP,MAA8B,oDAA9B;AAEA,SAASC,iBAAT,QAAkC,wBAAlC;;;;AAEA,MAAMC,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA8C;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,IAPmB,GAOZ,MAAM;AACT,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KATkB;;AAAA,SAWnBC,IAXmB,GAWZ,MAAM;AACT,WAAKF,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAbkB;;AAAA,SAenBE,mBAfmB,GAeGC,UAAU,IAAIA,UAAU,CAACC,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,MAAuB;AAClEC,MAAAA,IAAI,EAAEF,SAD4D;AACjDG,MAAAA,EAAE,EAAEH,SAD6C;AAClCI,MAAAA,QAAQ,EAAE;AADwB,KAAvB,CAAf,CAfjB;;AAAA,SAqBnBC,cArBmB,GAqBF,CAACC,IAAD,EAAOC,YAAP,KAAwB;AACrC,WAAKX,IAAL;;AACA,UAAGU,IAAI,KAAK,IAAZ,EAAkB;AACd,cAAME,WAAW,GAAGD,YAAY,CAACE,cAAb,CAA4BV,GAA5B,CAAgCW,IAAI,IAAIA,IAAI,CAACR,IAA7C,CAApB;AACA,aAAKV,KAAL,CAAWmB,kBAAX,CAA8BH,WAA9B;AACH;AACJ,KA3BkB;;AAEf,SAAKI,KAAL,GAAa;AACTjB,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAwBDkB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAA4B,KAAKtB,KAAvC,CADK,CAEL;;AAEA,UAAMuB,0BAA0B,GAAGC,MAAM,CAACC,IAAP,CAAY7B,iBAAZ,EAA+B8B,MAA/B,CAAsCC,KAAK,IAAI,CAACL,qBAAqB,CAACM,QAAtB,CAA+BD,KAA/B,CAAhD,CAAnC,CAJK,CAKL;;AAEA,wBACI;AAAA,8BACI;AACI,QAAA,OAAO,EAAE,KAAK1B,IADlB;AAEI,QAAA,SAAS,EAAC,mBAFd;AAGI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAW6B,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,KAAD;AACI,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWjB,OADxB;AAEI,QAAA,OAAO,EAAE,KAAKC,IAFlB;AAGI,QAAA,KAAK,EAAE,EAHX;AAII,QAAA,MAAM,EAAE,EAJZ;AAKI,QAAA,OAAO,EAAE,GALb;AAMI,QAAA,eAAe,EAAE,KANrB;AAOI,QAAA,UAAU,EAAE,KAPhB;AAQI,QAAA,gBAAgB,EAAE,KARtB;AAAA,+BAUI,QAAC,iBAAD;AACI,UAAA,cAAc,EAAE,KAAKS,cADzB;AAEI,UAAA,0BAA0B,EAAE,KAAKR,mBAAL,CAAyBkB,0BAAzB,CAFhC;AAGI,UAAA,qBAAqB,EAAE,KAAKlB,mBAAL,CAAyBiB,qBAAzB;AAH3B,WAIS,KAAKtB,KAAL,CAAW8B,GAJpB;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,oBADJ;AA6BH;;AAnEyC;;AAsE9C,eAAejC,eAAf","sourcesContent":["import React from 'react';\nimport Modal from '../modal/modal.component';\n\nimport IndicatorSelector from '../indicator-selector/indicator-selector.component';\n\nimport { INDICATORS_TO_API } from '../../assets/constants';\n\nclass AddColumnButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            visible: false\n        };\n    }\n\n    show = () => {\n        this.setState({ visible: true });\n    }\n\n    hide = () => {\n        this.setState({ visible: false });\n    }\n\n    deriveIndicatorsArr = indicators => indicators.map((indicator, index) => ({\n            name: indicator, id: indicator, selected: false\n        })\n    )\n    \n\n    handleOkCancel = (type, updatedState) => {\n        this.hide();\n        if(type === 'ok') {\n            const columnNames = updatedState.usedIndicators.map(item => item.name);\n            this.props.handleColumnUpdate(columnNames);\n        }\n    }\n\n    render() {\n        const { usedIndicatorsDefault } = this.props;\n        // console.log(this.deriveIndicatorsArr(usedIndicatorsDefault))\n\n        const availableIndicatorsDefault = Object.keys(INDICATORS_TO_API).filter(value => !usedIndicatorsDefault.includes(value));\n        // console.log(availableIndicators,'k')\n\n        return (\n            <>\n                <button \n                    onClick={this.show}\n                    className=\"add-column-button\" \n                    style={this.props.style}\n                >\n                    +\n                </button>\n\n                <Modal \n                    visible={this.state.visible} \n                    onClose={this.hide}\n                    width={60}\n                    height={50}\n                    measure={'%'}\n                    showCloseButton={false}\n                    closeOnEsc={false}\n                    closeMaskOnClick={false}\n                >\n                    <IndicatorSelector \n                        handleOkCancel={this.handleOkCancel}\n                        availableIndicatorsDefault={this.deriveIndicatorsArr(availableIndicatorsDefault)}\n                        usedIndicatorsDefault={this.deriveIndicatorsArr(usedIndicatorsDefault)}\n                        key={this.props.key}\n                    />\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default AddColumnButton;"]},"metadata":{},"sourceType":"module"}