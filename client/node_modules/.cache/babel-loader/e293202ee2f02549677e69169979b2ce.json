{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-stock-universe-button/add-stock-universe-button.component.jsx\";\nimport React from 'react';\nimport Modal from '../modal/modal.component';\nimport IndicatorsList from '../indicators-list/indicators-list.component';\nimport { INDICATORS_TO_API } from '../../assets/constants';\nimport './add-stock-universe-button.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddStockUniverseButton extends React.Component {\n  constructor(props) {\n    // console.log('constructor add')\n    super(props);\n\n    this.show = () => {\n      this.setState(prevState => ({\n        visible: true,\n        universes: prevState.universes.map(item => ({ ...item,\n          selected: false\n        }))\n      }));\n    };\n\n    this.hide = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.onToggle = event => {\n      const updatedIndex = Number(event.target.id);\n      const className = event.target.className;\n      const indicatorListName = className.replace('selected', '').trim();\n      console.log(updatedIndex, className, indicatorListName);\n    };\n\n    this.state = {\n      visible: false,\n      universes: [{\n        id: 1,\n        name: 'SP500',\n        selected: true\n      }, {\n        id: 2,\n        name: 'NAS100',\n        selected: false\n      }]\n    };\n  }\n\n  // handleOkCancel = (type, updatedState) => {\n  //     this.hide();\n  //     if(type === 'ok') {\n  //         const columnNames = updatedState.usedIndicators.map(item => item.name);\n  //         this.props.handleColumnUpdate(columnNames);\n  //     }\n  // }\n  render() {\n    // // console.log('ab',this.props)\n    // const { usedIndicatorsDefault } = this.props;\n    // // console.log(this.deriveIndicatorsArr(usedIndicatorsDefault))\n    // const availableIndicatorsDefault = Object.keys(INDICATORS_TO_API).filter(value => !usedIndicatorsDefault.includes(value));\n    // // console.log(availableIndicators,'k')\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.show,\n        className: \"add-stock-universe-button\",\n        style: this.props.style,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: this.state.visible,\n        onClose: this.hide,\n        width: 40,\n        height: 30,\n        measure: '%',\n        showCloseButton: true,\n        closeOnEsc: true,\n        closeMaskOnClick: false,\n        enterAnimation: 'zoom',\n        leaveAnimation: 'zoom',\n        duration: 500,\n        children: /*#__PURE__*/_jsxDEV(IndicatorsList, {\n          displayedIndicators: this.state.universes,\n          onToggle: onToggle,\n          className: 'universes',\n          headerName: 'Universe',\n          style: {\n            width: '80%',\n            marginTop: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddStockUniverseButton;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-stock-universe-button/add-stock-universe-button.component.jsx"],"names":["React","Modal","IndicatorsList","INDICATORS_TO_API","AddStockUniverseButton","Component","constructor","props","show","setState","prevState","visible","universes","map","item","selected","hide","onToggle","event","updatedIndex","Number","target","id","className","indicatorListName","replace","trim","console","log","state","name","render","style","width","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from '../modal/modal.component';\n\nimport IndicatorsList from '../indicators-list/indicators-list.component';\n\nimport { INDICATORS_TO_API } from '../../assets/constants';\n\nimport './add-stock-universe-button.styles.css';\n\nclass AddStockUniverseButton extends React.Component {\n\n    constructor(props) {\n        // console.log('constructor add')\n        super(props);\n        this.state = { \n            visible: false,\n            universes: [\n                {\n                    id: 1,\n                    name: 'SP500',\n                    selected: true\n                },\n                {\n                    id: 2,\n                    name: 'NAS100',\n                    selected: false\n                }\n            ]\n        };\n    }\n\n    show = () => {\n        this.setState(prevState => ({ \n            visible: true,\n            universes: prevState.universes.map(item => ({\n                ...item,\n                selected: false\n            }))\n        }));\n    }\n\n    hide = () => {\n        this.setState({ visible: false });\n    }\n\n    onToggle = event => {\n        const updatedIndex = Number(event.target.id);\n        const className = event.target.className;\n        const indicatorListName = className.replace('selected', '').trim();\n\n        console.log(updatedIndex,className,indicatorListName)\n    }\n\n    // handleOkCancel = (type, updatedState) => {\n    //     this.hide();\n    //     if(type === 'ok') {\n    //         const columnNames = updatedState.usedIndicators.map(item => item.name);\n    //         this.props.handleColumnUpdate(columnNames);\n    //     }\n    // }\n\n    render() {\n        // // console.log('ab',this.props)\n        // const { usedIndicatorsDefault } = this.props;\n        // // console.log(this.deriveIndicatorsArr(usedIndicatorsDefault))\n\n        // const availableIndicatorsDefault = Object.keys(INDICATORS_TO_API).filter(value => !usedIndicatorsDefault.includes(value));\n        // // console.log(availableIndicators,'k')\n\n        return (\n            <>\n                <button \n                    onClick={this.show}\n                    className=\"add-stock-universe-button\" \n                    style={this.props.style}\n                >\n                    +\n                </button>\n\n                <Modal \n                    visible={this.state.visible} \n                    onClose={this.hide}\n                    width={40}\n                    height={30}\n                    measure={'%'}\n                    showCloseButton={true}\n                    closeOnEsc={true}\n                    closeMaskOnClick={false}\n                    enterAnimation={'zoom'}\n                    leaveAnimation={'zoom'}\n                    duration={500}\n                >\n                    <IndicatorsList \n                        displayedIndicators={\n                            this.state.universes\n                        }\n                        onToggle={onToggle}\n                        className={'universes'}\n                        headerName={'Universe'}\n                        style={{width: '80%',marginTop: '20px'}}\n                    />\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default AddStockUniverseButton;"]},"metadata":{},"sourceType":"module"}