{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-stock-universe-button/add-stock-universe-button.component.jsx\";\nimport React from 'react';\nimport Modal from '../modal/modal.component';\nimport IndicatorsList from '../indicators-list/indicators-list.component';\nimport { INDICATORS_TO_API } from '../../assets/constants';\nimport './add-stock-universe-button.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddStockUniverseButton extends React.Component {\n  constructor(props) {\n    // console.log('constructor add')\n    super(props);\n\n    this.show = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      visible: false\n    };\n  }\n\n  // deriveIndicatorsArr = indicators => indicators.map((indicator, index) => ({\n  //         name: indicator, id: indicator, selected: false\n  //     })\n  // )\n  // handleOkCancel = (type, updatedState) => {\n  //     this.hide();\n  //     if(type === 'ok') {\n  //         const columnNames = updatedState.usedIndicators.map(item => item.name);\n  //         this.props.handleColumnUpdate(columnNames);\n  //     }\n  // }\n  render() {\n    // // console.log('ab',this.props)\n    // const { usedIndicatorsDefault } = this.props;\n    // // console.log(this.deriveIndicatorsArr(usedIndicatorsDefault))\n    // const availableIndicatorsDefault = Object.keys(INDICATORS_TO_API).filter(value => !usedIndicatorsDefault.includes(value));\n    // // console.log(availableIndicators,'k')\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.show,\n        className: \"add-stock-universe-button\",\n        style: this.props.style,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: this.state.visible,\n        onClose: this.hide,\n        width: 60,\n        height: 50,\n        measure: '%',\n        showCloseButton: true,\n        closeOnEsc: true,\n        closeMaskOnClick: false,\n        leaveAnimation: rodal - slideDown - leave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddStockUniverseButton;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/add-stock-universe-button/add-stock-universe-button.component.jsx"],"names":["React","Modal","IndicatorsList","INDICATORS_TO_API","AddStockUniverseButton","Component","constructor","props","show","setState","visible","hide","state","render","style","rodal","slideDown","leave"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,OAAOC,cAAP,MAA2B,8CAA3B;AAEA,SAASC,iBAAT,QAAkC,wBAAlC;AAEA,OAAO,wCAAP;;;;AAEA,MAAMC,sBAAN,SAAqCJ,KAAK,CAACK,SAA3C,CAAqD;AAEjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,UAAMA,KAAN;;AAFe,SAQnBC,IARmB,GAQZ,MAAM;AACT,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAVkB;;AAAA,SAYnBC,IAZmB,GAYZ,MAAM;AACT,WAAKF,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAdkB;;AAGf,SAAKE,KAAL,GAAa;AACTF,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAUD;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AAEA;AACA;AAEA,wBACI;AAAA,8BACI;AACI,QAAA,OAAO,EAAE,KAAKL,IADlB;AAEI,QAAA,SAAS,EAAC,2BAFd;AAGI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWO,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,KAAD;AACI,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWF,OADxB;AAEI,QAAA,OAAO,EAAE,KAAKC,IAFlB;AAGI,QAAA,KAAK,EAAE,EAHX;AAII,QAAA,MAAM,EAAE,EAJZ;AAKI,QAAA,OAAO,EAAE,GALb;AAMI,QAAA,eAAe,EAAE,IANrB;AAOI,QAAA,UAAU,EAAE,IAPhB;AAQI,QAAA,gBAAgB,EAAE,KARtB;AASI,QAAA,cAAc,EAAEI,KAAK,GAACC,SAAN,GAAgBC;AATpC;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,oBADJ;AA8BH;;AAtEgD;;AAyErD,eAAeb,sBAAf","sourcesContent":["import React from 'react';\nimport Modal from '../modal/modal.component';\n\nimport IndicatorsList from '../indicators-list/indicators-list.component';\n\nimport { INDICATORS_TO_API } from '../../assets/constants';\n\nimport './add-stock-universe-button.styles.css';\n\nclass AddStockUniverseButton extends React.Component {\n\n    constructor(props) {\n        // console.log('constructor add')\n        super(props);\n        this.state = { \n            visible: false\n        };\n    }\n\n    show = () => {\n        this.setState({ visible: true });\n    }\n\n    hide = () => {\n        this.setState({ visible: false });\n    }\n\n    // deriveIndicatorsArr = indicators => indicators.map((indicator, index) => ({\n    //         name: indicator, id: indicator, selected: false\n    //     })\n    // )\n    \n\n    // handleOkCancel = (type, updatedState) => {\n    //     this.hide();\n    //     if(type === 'ok') {\n    //         const columnNames = updatedState.usedIndicators.map(item => item.name);\n    //         this.props.handleColumnUpdate(columnNames);\n    //     }\n    // }\n\n    render() {\n        // // console.log('ab',this.props)\n        // const { usedIndicatorsDefault } = this.props;\n        // // console.log(this.deriveIndicatorsArr(usedIndicatorsDefault))\n\n        // const availableIndicatorsDefault = Object.keys(INDICATORS_TO_API).filter(value => !usedIndicatorsDefault.includes(value));\n        // // console.log(availableIndicators,'k')\n\n        return (\n            <>\n                <button \n                    onClick={this.show}\n                    className=\"add-stock-universe-button\" \n                    style={this.props.style}\n                >\n                    +\n                </button>\n\n                <Modal \n                    visible={this.state.visible} \n                    onClose={this.hide}\n                    width={60}\n                    height={50}\n                    measure={'%'}\n                    showCloseButton={true}\n                    closeOnEsc={true}\n                    closeMaskOnClick={false}\n                    leaveAnimation={rodal-slideDown-leave}\n                >\n                    {/* <IndicatorsList \n                        handleOkCancel={this.handleOkCancel}\n                        availableIndicatorsDefault={this.deriveIndicatorsArr(availableIndicatorsDefault)}\n                        usedIndicatorsDefault={this.deriveIndicatorsArr(usedIndicatorsDefault)}\n                        // key={this.props.updateKey}\n                    /> */}\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default AddStockUniverseButton;"]},"metadata":{},"sourceType":"module"}