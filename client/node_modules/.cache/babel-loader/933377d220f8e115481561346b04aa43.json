{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/build-screener/testFetch.component.jsx\";\nimport React from 'react';\nimport { SYMBOLS, SP500, NAS100, DJ30 } from '../../assets/constants'; // function sleep(milliseconds) {\n// \tconst date = Date.now();\n// \tlet currentDate = null;\n// \tdo {\n// \t\tcurrentDate = Date.now();\n// \t} while (currentDate - date < milliseconds);\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass TestFetch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unavailableSymbols: []\n    };\n  }\n\n  async componentDidMount() {\n    SP500.slice(0, 15).forEach((symbol, index) => {\n      // SP500.forEach((symbol, index) => {\n      console.log('symbol', symbol);\n      const sleepTime = index % 5 === 0 ? 100000 * index : 0;\n      console.log(sleepTime, index, index % 5, 'sleep set');\n      sleep(sleepTime).then(() => {\n        // Do something after the sleep!\n        console.log(sleepTime, index, 'sleep');\n        this.props.fetchRealTimeData([symbol], ['closePrice']).then(obj => {\n          // setTimeout(\n          // \tfunction () {\n          // \t\tconsole.log(index);\n          // \t\tif (!obj) {\n          // \t\t\tthis.setState(prevState => ({\n          // \t\t\t\tunavailableSymbols: [...prevState.unavailableSymbols, symbol],\n          // \t\t\t}));\n          // \t\t}\n          // \t\tconsole.log('obj', obj, symbol, index);\n          // \t}.bind(this),\n          // \t// index % 50 === 0 ? 100000 * index : 0\n          // \t100000 * index\n          // );\n          // console.log(index);\n          if (!obj) {\n            this.setState(prevState => ({\n              unavailableSymbols: [...prevState.unavailableSymbols, symbol]\n            }));\n          }\n\n          console.log('obj', obj, symbol, index);\n        }); // if (index % 50 === 0) {\n        // \tconsole.log('waiting', index);\n        // \tsleep(10000);\n        // \t// sleep(5000).then(() => console.log('waiting', index));\n        // }\n      });\n    });\n  }\n\n  render() {\n    // console.log('props', this.props,this.props.sortConfig,'this.props.sortConfig')\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [\"Unavailable symbols:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.unavailableSymbols.map((symbol, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: symbol\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default TestFetch;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/build-screener/testFetch.component.jsx"],"names":["React","SYMBOLS","SP500","NAS100","DJ30","sleep","ms","Promise","resolve","setTimeout","TestFetch","Component","constructor","props","state","unavailableSymbols","componentDidMount","slice","forEach","symbol","index","console","log","sleepTime","then","fetchRealTimeData","obj","setState","prevState","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,wBAA7C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,KAAT,CAAeC,EAAf,EAAmB;AAClB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACA;;AAED,MAAMI,SAAN,SAAwBV,KAAK,CAACW,SAA9B,CAAwC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,kBAAkB,EAAE;AADR,KAAb;AAGA;;AACsB,QAAjBC,iBAAiB,GAAG;AACzBd,IAAAA,KAAK,CAACe,KAAN,CAAY,CAAZ,EAAe,EAAf,EAAmBC,OAAnB,CAA2B,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC7C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AAEA,YAAMI,SAAS,GAAGH,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,SAASA,KAA3B,GAAmC,CAArD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ,EAAuBH,KAAvB,EAA8BA,KAAK,GAAG,CAAtC,EAAyC,WAAzC;AAEAf,MAAAA,KAAK,CAACkB,SAAD,CAAL,CAAiBC,IAAjB,CAAsB,MAAM;AAC3B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ,EAAuBH,KAAvB,EAA8B,OAA9B;AAEA,aAAKP,KAAL,CAAWY,iBAAX,CAA6B,CAACN,MAAD,CAA7B,EAAuC,CAAC,YAAD,CAAvC,EAAuDK,IAAvD,CAA4DE,GAAG,IAAI;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,cAAI,CAACA,GAAL,EAAU;AACT,iBAAKC,QAAL,CAAcC,SAAS,KAAK;AAC3Bb,cAAAA,kBAAkB,EAAE,CAAC,GAAGa,SAAS,CAACb,kBAAd,EAAkCI,MAAlC;AADO,aAAL,CAAvB;AAGA;;AACDE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBI,GAAnB,EAAwBP,MAAxB,EAAgCC,KAAhC;AACA,SAtBD,EAJ2B,CA4B3B;AACA;AACA;AAEA;AACA;AACA,OAlCD;AAmCA,KA1CD;AA2CA;;AAEDS,EAAAA,MAAM,GAAG;AACR;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,sDAEC;AAAA,kBACE,KAAKf,KAAL,CAAWC,kBAAX,CAA8Be,GAA9B,CAAkC,CAACX,MAAD,EAASC,KAAT,kBAClC;AAAA,oBAAiBD;AAAjB,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUA;;AAjEsC;;AAoExC,eAAeV,SAAf","sourcesContent":["import React from 'react';\n\nimport { SYMBOLS, SP500, NAS100, DJ30 } from '../../assets/constants';\n\n// function sleep(milliseconds) {\n// \tconst date = Date.now();\n// \tlet currentDate = null;\n// \tdo {\n// \t\tcurrentDate = Date.now();\n// \t} while (currentDate - date < milliseconds);\n// }\n\nfunction sleep(ms) {\n\treturn new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass TestFetch extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tunavailableSymbols: [],\n\t\t};\n\t}\n\tasync componentDidMount() {\n\t\tSP500.slice(0, 15).forEach((symbol, index) => {\n\t\t\t// SP500.forEach((symbol, index) => {\n\t\t\tconsole.log('symbol', symbol);\n\n\t\t\tconst sleepTime = index % 5 === 0 ? 100000 * index : 0;\n\t\t\tconsole.log(sleepTime, index, index % 5, 'sleep set');\n\n\t\t\tsleep(sleepTime).then(() => {\n\t\t\t\t// Do something after the sleep!\n\t\t\t\tconsole.log(sleepTime, index, 'sleep');\n\n\t\t\t\tthis.props.fetchRealTimeData([symbol], ['closePrice']).then(obj => {\n\t\t\t\t\t// setTimeout(\n\t\t\t\t\t// \tfunction () {\n\t\t\t\t\t// \t\tconsole.log(index);\n\t\t\t\t\t// \t\tif (!obj) {\n\t\t\t\t\t// \t\t\tthis.setState(prevState => ({\n\t\t\t\t\t// \t\t\t\tunavailableSymbols: [...prevState.unavailableSymbols, symbol],\n\t\t\t\t\t// \t\t\t}));\n\t\t\t\t\t// \t\t}\n\t\t\t\t\t// \t\tconsole.log('obj', obj, symbol, index);\n\t\t\t\t\t// \t}.bind(this),\n\t\t\t\t\t// \t// index % 50 === 0 ? 100000 * index : 0\n\t\t\t\t\t// \t100000 * index\n\t\t\t\t\t// );\n\n\t\t\t\t\t// console.log(index);\n\t\t\t\t\tif (!obj) {\n\t\t\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\t\t\tunavailableSymbols: [...prevState.unavailableSymbols, symbol],\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('obj', obj, symbol, index);\n\t\t\t\t});\n\n\t\t\t\t// if (index % 50 === 0) {\n\t\t\t\t// \tconsole.log('waiting', index);\n\t\t\t\t// \tsleep(10000);\n\n\t\t\t\t// \t// sleep(5000).then(() => console.log('waiting', index));\n\t\t\t\t// }\n\t\t\t});\n\t\t});\n\t}\n\n\trender() {\n\t\t// console.log('props', this.props,this.props.sortConfig,'this.props.sortConfig')\n\t\treturn (\n\t\t\t<div className=''>\n\t\t\t\tUnavailable symbols:\n\t\t\t\t<ul>\n\t\t\t\t\t{this.state.unavailableSymbols.map((symbol, index) => (\n\t\t\t\t\t\t<li key={index}>{symbol}</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TestFetch;\n"]},"metadata":{},"sourceType":"module"}