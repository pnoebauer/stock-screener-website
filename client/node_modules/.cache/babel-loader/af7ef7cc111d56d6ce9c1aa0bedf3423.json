{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/modal/modal.component.jsx\";\n// https://github.com/chenjiahan/rodal\nimport React from 'react';\nimport Dialog from './dialog.component'; // env\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IN_BROWSER = typeof window !== 'undefined';\nconst UA = IN_BROWSER && window.navigator.userAgent.toLowerCase();\nconst IS_IE_9 = UA && UA.indexOf('msie 9.0') > 0;\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onKeyUp = event => {\n      if (!this.props.closeOnEsc || event.keyCode !== 27) {\n        //closeOnEsc is off or clicked key is not ESC\n        return;\n      }\n\n      this.props.onClose(event);\n    };\n\n    this.animationEnd = event => {\n      const {\n        animationType\n      } = this.state;\n      const {\n        closeOnEsc,\n        onAnimationEnd\n      } = this.props;\n\n      if (animationType === 'leave') {\n        this.setState({\n          isShow: false\n        });\n      } else if (closeOnEsc) {\n        this.popup.current.focus(); //   this.el.focus();\n      } // console.log('end',event.target === this.popup.current, onAnimationEnd)\n      // if (event.target === this.el && onAnimationEnd) {\n\n\n      if (event.target === this.popup.current && onAnimationEnd) {\n        // console.log('end')\n        onAnimationEnd();\n      }\n    };\n\n    this.popup = /*#__PURE__*/React.createRef();\n    this.state = {\n      isShow: false,\n      animationType: 'leave'\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.visible) {\n      this.enter();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.visible && !prevProps.visible) {\n      this.enter();\n    }\n\n    if (!this.props.visible && prevProps.visible) {\n      this.leave();\n    }\n  }\n\n  enter() {\n    this.setState({\n      isShow: true,\n      animationType: 'enter'\n    });\n  }\n\n  leave() {\n    this.setState(IS_IE_9 ? {\n      isShow: false\n    } : {\n      animationType: 'leave'\n    });\n  }\n\n  render() {\n    const {\n      closeMaskOnClick,\n      onClose,\n      customMaskStyles,\n      showMask,\n      duration,\n      className,\n      children\n    } = this.props;\n    const {\n      isShow,\n      animationType\n    } = this.state;\n    const Mask = showMask ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rodal-mask\",\n      style: customMaskStyles,\n      onClick: closeMaskOnClick ? onClose : void 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this) : null;\n    const style = {\n      display: isShow ? '' : 'none',\n      animationDuration: duration + 'ms',\n      WebkitAnimationDuration: duration + 'ms'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      className: `rodal rodal-fade-${animationType} ${className}`,\n      onAnimationEnd: this.animationEnd,\n      tabIndex: \"-1\",\n      ref: this.popup // ref={ref => { this.el = ref; }}\n      ,\n      onKeyUp: this.onKeyUp,\n      children: [Mask, /*#__PURE__*/_jsxDEV(Dialog, { ...this.props,\n        animationType: animationType,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nModal.defaultProps = {\n  width: 400,\n  height: 240,\n  measure: 'px',\n  visible: false,\n  showMask: false,\n  closeOnEsc: true,\n  closeMaskOnClick: true,\n  showCloseButton: true,\n  animation: 'slideUp',\n  enterAnimation: 'fade',\n  leaveAnimation: 'rotate',\n  duration: 1300,\n  className: '',\n  customStyles: {},\n  customMaskStyles: {}\n};\nexport default Modal;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/modal/modal.component.jsx"],"names":["React","Dialog","IN_BROWSER","window","UA","navigator","userAgent","toLowerCase","IS_IE_9","indexOf","Modal","Component","constructor","props","onKeyUp","event","closeOnEsc","keyCode","onClose","animationEnd","animationType","state","onAnimationEnd","setState","isShow","popup","current","focus","target","createRef","componentDidMount","visible","enter","componentDidUpdate","prevProps","leave","render","closeMaskOnClick","customMaskStyles","showMask","duration","className","children","Mask","style","display","animationDuration","WebkitAnimationDuration","defaultProps","width","height","measure","showCloseButton","animation","enterAnimation","leaveAnimation","customStyles"],"mappings":"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","sourcesContent":["// https://github.com/chenjiahan/rodal\n\nimport React from 'react';\n\nimport Dialog from './dialog.component';\n\n// env\nconst IN_BROWSER = typeof window !== 'undefined';\nconst UA = IN_BROWSER && window.navigator.userAgent.toLowerCase();\nconst IS_IE_9 = UA && UA.indexOf('msie 9.0') > 0;\n\n\nclass Modal extends React.Component {\n  static defaultProps = {\n    width: 400,\n    height: 240,\n    measure: 'px',\n    visible: false,\n    showMask: false,\n    closeOnEsc: true,\n    closeMaskOnClick: true,\n    showCloseButton: true,\n    animation: 'slideUp',\n    enterAnimation: 'fade',\n    leaveAnimation: 'rotate',\n    duration: 1300,\n    className: '',\n    customStyles: {},\n    customMaskStyles: {}\n  };\n\n  constructor(props) {\n      super(props);\n      this.popup = React.createRef();\n      this.state = {\n        isShow: false,\n        animationType: 'leave'\n      };\n  }\n  \n\n  componentDidMount() {\n    if (this.props.visible) {\n      this.enter();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.visible && !prevProps.visible) {\n      this.enter();\n    }\n\n    if (!this.props.visible && prevProps.visible) {\n      this.leave();\n    }\n  }\n\n  enter() {\n    this.setState({ isShow: true, animationType: 'enter' });\n  }\n\n  leave() {\n    this.setState(IS_IE_9 ? { isShow: false } : { animationType: 'leave' });\n  }\n\n  onKeyUp = event => {\n    if (!this.props.closeOnEsc || event.keyCode !== 27) { //closeOnEsc is off or clicked key is not ESC\n      return;\n    }\n\n    this.props.onClose(event);\n  };\n\n  animationEnd = event => {\n    const { animationType } = this.state;\n    const { closeOnEsc, onAnimationEnd } = this.props;\n\n    if (animationType === 'leave') {\n      this.setState({ isShow: false });\n    } else if (closeOnEsc) {\n      this.popup.current.focus();\n    //   this.el.focus();\n    }\n    // console.log('end',event.target === this.popup.current, onAnimationEnd)\n    \n    // if (event.target === this.el && onAnimationEnd) {\n    if (event.target === this.popup.current && onAnimationEnd) {\n        // console.log('end')\n      onAnimationEnd();\n    }\n  };\n\n  render() {\n    const {\n      closeMaskOnClick,\n      onClose,\n      customMaskStyles,\n      showMask,\n      duration,\n      className,\n      children\n    } = this.props;\n\n    const { isShow, animationType } = this.state;\n\n    const Mask = showMask ? (\n      <div\n        className=\"rodal-mask\"\n        style={customMaskStyles}\n        onClick={closeMaskOnClick ? onClose : void 0}\n      />\n    ) : null;\n\n    const style = {\n      display: isShow ? '' : 'none',\n      animationDuration: duration + 'ms',\n      WebkitAnimationDuration: duration + 'ms'\n    };\n\n    return (\n      <div\n        style={style}\n        className={`rodal rodal-fade-${animationType} ${className}`}\n        onAnimationEnd={this.animationEnd}\n        tabIndex=\"-1\"\n        ref={this.popup}\n        // ref={ref => { this.el = ref; }}\n        onKeyUp={this.onKeyUp}\n      >\n        {Mask}\n        <Dialog {...this.props} animationType={animationType}>\n          {children}\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}