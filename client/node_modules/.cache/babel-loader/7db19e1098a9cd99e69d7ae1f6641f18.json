{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/indicator-selector/indicator-selector.component.jsx\";\nimport React from 'react';\nimport IndicatorsList from '../indicators-list/indicators-list.component';\nimport './indicator-selector.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IndicatorSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggle = e => {\n      // console.log(e.target.className,e.target.id)\n      const index = e.target.id;\n      this.setState(prevState => {\n        const newSelect = !prevState.availableIndicators[index].selected; // console.log(prevState.availableIndicators[index],newSelect);\n        // console.log({\n        //     ...prevState.availableIndicators[index],\n        //     selected: newSelect\n        // });\n\n        const updatedIndicator = { ...prevState.availableIndicators[index],\n          selected: newSelect\n        };\n        return {\n          availableIndicators: Object.assign([], prevState.availableIndicators, {\n            [index]: updatedIndicator\n          })\n        };\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      availableIndicators: [{\n        name: 'SMA',\n        id: 0,\n        selected: false\n      }, {\n        name: 'EMA',\n        id: 1,\n        selected: false\n      }, {\n        name: 'Open',\n        id: 2,\n        selected: true\n      }, {\n        name: 'Close',\n        id: 3,\n        selected: false\n      }],\n      usedIndicators: [],\n      availableIndicatorsSelected: [],\n      usedIndicatorsSelected: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicator-selector\",\n      children: [/*#__PURE__*/_jsxDEV(IndicatorsList, {\n        displayedIndicators: this.state.availableIndicators,\n        onClick: this.onToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-remove\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"REMOVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IndicatorsList, {\n        displayedIndicators: this.state.usedIndicators\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default IndicatorSelector;","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/indicator-selector/indicator-selector.component.jsx"],"names":["React","IndicatorsList","IndicatorSelector","Component","constructor","props","onToggle","e","index","target","id","setState","prevState","newSelect","availableIndicators","selected","updatedIndicator","Object","assign","console","log","state","name","usedIndicators","availableIndicatorsSelected","usedIndicatorsSelected","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,8CAA3B;AAEA,OAAO,iCAAP;;;AAEA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAenBC,QAfmB,GAePC,CAAD,IAAO;AACd;AAEA,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,EAAvB;AAEA,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,cAAMC,SAAS,GAAG,CAACD,SAAS,CAACE,mBAAV,CAA8BN,KAA9B,EAAqCO,QAAxD,CADuB,CAEvB;AAEA;AACA;AACA;AACA;;AACA,cAAMC,gBAAgB,GAAG,EACrB,GAAGJ,SAAS,CAACE,mBAAV,CAA8BN,KAA9B,CADkB;AAErBO,UAAAA,QAAQ,EAAEF;AAFW,SAAzB;AAMA,eAAO;AACHC,UAAAA,mBAAmB,EAAEG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,SAAS,CAACE,mBAA5B,EAAiD;AAAC,aAACN,KAAD,GAASQ;AAAV,WAAjD;AADlB,SAAP;AAGH,OAjBD,EAmBA,MAAMG,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,CAnBN;AAqBH,KAzCkB;;AAEf,SAAKA,KAAL,GAAa;AACTP,MAAAA,mBAAmB,EAAE,CACjB;AAACQ,QAAAA,IAAI,EAAE,KAAP;AAAcZ,QAAAA,EAAE,EAAE,CAAlB;AAAqBK,QAAAA,QAAQ,EAAE;AAA/B,OADiB,EAEjB;AAACO,QAAAA,IAAI,EAAE,KAAP;AAAcZ,QAAAA,EAAE,EAAE,CAAlB;AAAqBK,QAAAA,QAAQ,EAAE;AAA/B,OAFiB,EAGjB;AAACO,QAAAA,IAAI,EAAE,MAAP;AAAeZ,QAAAA,EAAE,EAAE,CAAnB;AAAsBK,QAAAA,QAAQ,EAAE;AAAhC,OAHiB,EAIjB;AAACO,QAAAA,IAAI,EAAE,OAAP;AAAgBZ,QAAAA,EAAE,EAAE,CAApB;AAAuBK,QAAAA,QAAQ,EAAE;AAAjC,OAJiB,CADZ;AAOTQ,MAAAA,cAAc,EAAE,EAPP;AAQTC,MAAAA,2BAA2B,EAAE,EARpB;AASTC,MAAAA,sBAAsB,EAAE;AATf,KAAb;AAWH;;AA8BDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI,QAAC,cAAD;AACI,QAAA,mBAAmB,EAAE,KAAKL,KAAL,CAAWP,mBADpC;AAEI,QAAA,OAAO,EAAE,KAAKR;AAFlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI,QAAC,cAAD;AAAgB,QAAA,mBAAmB,EAAE,KAAKe,KAAL,CAAWE;AAAhD;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA7D2C;;AAgEhD,eAAerB,iBAAf","sourcesContent":["import React from 'react';\n\nimport IndicatorsList from '../indicators-list/indicators-list.component';\n\nimport './indicator-selector.styles.css';\n\nclass IndicatorSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            availableIndicators: [\n                {name: 'SMA', id: 0, selected: false}, \n                {name: 'EMA', id: 1, selected: false}, \n                {name: 'Open', id: 2, selected: true},\n                {name: 'Close', id: 3, selected: false}\n            ],\n            usedIndicators: [],\n            availableIndicatorsSelected: [],\n            usedIndicatorsSelected: []\n        }\n    }\n\n    onToggle = (e) => {\n        // console.log(e.target.className,e.target.id)\n\n        const index = e.target.id;\n\n        this.setState(prevState => {\n            const newSelect = !prevState.availableIndicators[index].selected\n            // console.log(prevState.availableIndicators[index],newSelect);\n\n            // console.log({\n            //     ...prevState.availableIndicators[index],\n            //     selected: newSelect\n            // });\n            const updatedIndicator = {\n                ...prevState.availableIndicators[index],\n                selected: newSelect\n            };\n\n            \n            return {\n                availableIndicators: Object.assign([], prevState.availableIndicators, {[index]: updatedIndicator})\n            }\n        }\n        ,\n        () => console.log(this.state)\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"indicator-selector\">\n                <IndicatorsList \n                    displayedIndicators={this.state.availableIndicators}\n                    onClick={this.onToggle}\n                />\n                \n                <div className=\"add-remove\">\n                    <button>ADD</button>\n                    <button>REMOVE</button>\n                </div>\n                \n                <IndicatorsList displayedIndicators={this.state.usedIndicators}/>\n            </div>\n            \n        )\n    }\n}\n\nexport default IndicatorSelector;"]},"metadata":{},"sourceType":"module"}