{"ast":null,"code":"var _jsxFileName = \"/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/generate-grid/generate-grid.component.jsx\";\nimport React from 'react';\nimport GenerateGridCell from '../generate-grid-cell/generate-grid-cell.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenerateGrid = ({\n  onChange,\n  ...props\n}) => {\n  console.log(props, 'props', onChange);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: //loop through the header items (columns) and afterwards loop through stored values (rows)  \n    this.props.header.map((type, colIdx) => this.props[type].map((rowVal, rowIdx) => /*#__PURE__*/_jsxDEV(GenerateGridCell, {\n      type: type,\n      gridLocation: {\n        rowIdx,\n        colIdx\n      },\n      onChange: onChange,\n      children: rowVal\n    }, `${Symbol[rowIdx]}-${type}-${rowIdx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GenerateGrid;\nexport default GenerateGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateGrid\");","map":{"version":3,"sources":["/Users/Phil/Desktop/Web Dev/Projects/stock-screener/src/components/generate-grid/generate-grid.component.jsx"],"names":["React","GenerateGridCell","GenerateGrid","onChange","props","console","log","header","map","type","colIdx","rowVal","rowIdx","Symbol"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,oDAA7B;;;AAEA,MAAMC,YAAY,GAAG,CAAE;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAF,KAA6B;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAkB,OAAlB,EAA0BD,QAA1B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,cAEI;AACA,SAAKC,KAAL,CAAWG,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,MAAP,KAAkB,KAAKN,KAAL,CAAWK,IAAX,EAAiBD,GAAjB,CAAqB,CAACG,MAAD,EAAQC,MAAR,kBACjD,QAAC,gBAAD;AACI,MAAA,IAAI,EAAEH,IADV;AAEI,MAAA,YAAY,EAAE;AAACG,QAAAA,MAAD;AAASF,QAAAA;AAAT,OAFlB;AAGI,MAAA,QAAQ,EAAEP,QAHd;AAAA,gBAMKQ;AANL,OAIU,GAAEE,MAAM,CAACD,MAAD,CAAS,IAAGH,IAAK,IAAGG,MAAO,EAJ7C;AAAA;AAAA;AAAA;AAAA,YAD4B,CAAxC;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAxBD;;KAAMV,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React from 'react';\n\nimport GenerateGridCell from '../generate-grid-cell/generate-grid-cell.component';\n\nconst GenerateGrid = ( { onChange, ...props} ) => {\n    console.log(props,'props',onChange);\n\n    return (\n        <div className=\"\">\n        {\n            //loop through the header items (columns) and afterwards loop through stored values (rows)  \n            this.props.header.map((type, colIdx) => this.props[type].map((rowVal,rowIdx) => (\n                        <GenerateGridCell\n                            type={type}\n                            gridLocation={{rowIdx, colIdx}}\n                            onChange={onChange}\n                            key={`${Symbol[rowIdx]}-${type}-${rowIdx}`} \n                        >\n                            {rowVal}\n                        </GenerateGridCell>\n                    )\n                )\n            ) \n        }\n\n\n        </div>\n    )\n}\n\nexport default GenerateGrid;"]},"metadata":{},"sourceType":"module"}